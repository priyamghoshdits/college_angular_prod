{"version":3,"file":"src_app_components_attendance_attendance_module_ts.3c0b28c836404455.js","mappings":"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","sources":["./src/app/components/attendance/attendance-routing.module.ts","./src/app/components/attendance/attendance.module.ts","./src/app/components/attendance/period-attendance/period-attendance.component.ts","./src/app/components/attendance/period-attendance/period-attendance.component.html","./src/app/components/attendance/show-attendance/show-attendance.component.ts","./src/app/components/attendance/show-attendance/show-attendance.component.html","./src/app/services/student.service.ts","./src/app/services/subject.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {PeriodAttendanceComponent} from \"./period-attendance/period-attendance.component\";\r\nimport {ShowAttendanceComponent} from \"./show-attendance/show-attendance.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'period-attendance',\r\n        component: PeriodAttendanceComponent,\r\n        data: {\r\n          title: \"Period Attendance\",\r\n          breadcrumb: \"Period Attendance\"\r\n        }\r\n      },\r\n      {\r\n        path: 'show-attendance',\r\n        component: ShowAttendanceComponent,\r\n        data: {\r\n          title: \"Show Attendance\",\r\n          breadcrumb: \"Show Attendance\"\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AttendanceRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AttendanceRoutingModule } from './attendance-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AttendanceRoutingModule\r\n  ]\r\n})\r\nexport class AttendanceModule { }\r\n","import { Component } from '@angular/core';\r\nimport {SubjectService} from \"../../../services/subject.service\";\r\nimport {FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators} from \"@angular/forms\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {NgForOf} from \"@angular/common\";\r\nimport {NgxPaginationModule} from \"ngx-pagination\";\r\nimport {StudentService} from \"../../../services/student.service\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: 'app-period-attendance',\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    MatIconModule,\r\n    NgForOf,\r\n    NgxPaginationModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  templateUrl: './period-attendance.component.html',\r\n  styleUrl: './period-attendance.component.scss'\r\n})\r\nexport class PeriodAttendanceComponent {\r\n  attendanceForm: FormGroup;\r\n  courseList: any[];\r\n  semesterList: any[];\r\n  subjectList: any[];\r\n  studentList: any[] = [];\r\n  p: number;\r\n\r\n  constructor(private subjectService: SubjectService, private studentService:StudentService) {\r\n    this.attendanceForm = new FormGroup({\r\n      id: new FormControl(null),\r\n      course_id: new FormControl(null, [Validators.required]),\r\n      semester_id: new FormControl(null, [Validators.required]),\r\n      date: new FormControl(null, [Validators.required]),\r\n      subject_id: new FormControl(null, [Validators.required]),\r\n    });\r\n    this.subjectService.getCourseListener().subscribe((response) => {\r\n      this.courseList = response;\r\n    })\r\n    this.courseList = this.subjectService.getCourses();\r\n  }\r\n\r\n  getSemester(){\r\n    this.subjectService.getSemesterByCourseId(this.attendanceForm.value.course_id).subscribe((response) => {\r\n      // @ts-ignore\r\n      this.semesterList = response.data;\r\n    })\r\n  }\r\n\r\n  getSubject(){\r\n    this.subjectService.getSubjects(this.attendanceForm.value.course_id, this.attendanceForm.value.semester_id).subscribe((response) => {\r\n      // @ts-ignore\r\n      this.subjectList = response.data;\r\n    });\r\n  }\r\n\r\n  getStudentAttendanceList(){\r\n    this.studentList = [];\r\n    this.studentService.getStudentAttendance(this.attendanceForm.value.course_id,this.attendanceForm.value.semester_id, this.attendanceForm.value.date, this.attendanceForm.value.subject_id).subscribe((response) => {\r\n      // @ts-ignore\r\n      this.studentList = response.data;\r\n    });\r\n  }\r\n\r\n  saveAttendance(){\r\n    let date = this.attendanceForm.value.date;\r\n    let subject_id = this.attendanceForm.value.subject_id;\r\n    let course_id = this.attendanceForm.value.course_id;\r\n    let semester_id = this.attendanceForm.value.semester_id;\r\n    this.studentList.forEach(function (value){\r\n      value.date = date;\r\n      value.subject_id = subject_id;\r\n      value.course_id = course_id;\r\n      value.semester_id = semester_id;\r\n    })\r\n    this.studentService.saveStudentAttendance(this.studentList).subscribe((response) => {\r\n      // @ts-ignore\r\n      if(response.success == 1){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Attendance saved',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        });\r\n        this.attendanceForm.reset();\r\n        this.studentList = [];\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 col-xl-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            <h5>Attendance</h5><span>Student period Attendance</span>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <form class=\"theme-form\" [formGroup]=\"attendanceForm\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-3 mb-3\">\r\n                                            <label>Select Course</label>\r\n                                            <select style=\"width: 100%\" formControlName=\"course_id\" class=\"form-select\" required (change)=\"getSemester()\">\r\n                                                <option *ngFor=\"let data of courseList\" [value]=\"data.id\" >\r\n                                                    {{data.course_name}}\r\n                                                </option>\r\n                                            </select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 mb-3\">\r\n                                            <label>Select Semester</label>\r\n                                            <select style=\"width: 100%\" formControlName=\"semester_id\" class=\"form-select\" required (change)=\"getSubject()\">\r\n                                                <option *ngFor=\"let data of semesterList\" [value]=\"data.semester_id\" >\r\n                                                    {{data.name}}\r\n                                                </option>\r\n                                            </select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 mb-3\">\r\n                                        <label>Select Date</label>\r\n                                        <input class=\"form-control\" formControlName=\"date\" type=\"date\"\r\n                                               placeholder=\"Select date\">\r\n                                    </div>\r\n                                    <div class=\"col-md-3 mb-3\">\r\n                                        <label>Select Subject</label>\r\n                                        <select style=\"width: 100%\" formControlName=\"subject_id\" class=\"form-select\" required (change)=\"getStudentAttendanceList()\">\r\n                                            <option *ngFor=\"let data of subjectList\" [value]=\"data.id\" >\r\n                                                {{data.name}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n<!--                                    <div>-->\r\n<!--                                        <button class=\"btn btn-primary me-1\">Search</button>-->\r\n<!--                                    </div>-->\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" [hidden]=\"studentList.length == 0\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            <h5>Student List</h5>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n\r\n\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Attendance</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr *ngFor=\"let record of studentList | paginate: { itemsPerPage: 10, currentPage: p } ;let indexOfElement=index\">\r\n                                        <td>{{indexOfElement+1}}</td>\r\n                                        <td>{{record.first_name}} {{record.middle_name}} {{record.last_name}}</td>\r\n                                        <td>\r\n                                            <input style=\"margin-left: 15px\" type=\"radio\" id=\"age1\" name=\"age{{indexOfElement}}\" [(ngModel)]=\"record.attendance\" [checked]=\"record.attendance == 'present'\" value=\"present\">\r\n                                            <label for=\"age1\">Present</label>\r\n                                            <input style=\"margin-left: 15px\" type=\"radio\" id=\"age1\" name=\"age{{indexOfElement}}\" [(ngModel)]=\"record.attendance\" [checked]=\"record.attendance == 'absent'\" value=\"absent\">\r\n                                            <label for=\"age1\">Absent</label>\r\n<!--                                            <div class=\"form-group m-t-15 m-checkbox-inline mb-0 custom-radio-ml\">-->\r\n<!--                                                <div class=\"radio radio-primary\">-->\r\n<!--                                                    <input type=\"radio\" name=\"radio3\" id=\"radioinline3\" [(ngModel)]=\"record.attendance\" value=\"present\" [checked]=\"record.attendance == 'present'\">-->\r\n<!--                                                    <label for=\"radioinline1\" class=\"mb-0\">Present</label>-->\r\n<!--                                                </div>-->\r\n<!--                                                <div class=\"radio radio-primary\">-->\r\n<!--                                                    <input type=\"radio\" name=\"radio4\" id=\"radioinline4\" [(ngModel)]=\"record.attendance\" value=\"absent\" [checked]=\"record.attendance == 'absent'\">-->\r\n<!--                                                    <label for=\"radioinline2\" class=\"mb-0\">Absent</label>-->\r\n<!--                                                </div>-->\r\n<!--                                            </div>-->\r\n                                        </td>\r\n                                    </tr>\r\n                                    <button class=\"btn btn-primary me-1\" (click)=\"saveAttendance()\">Submit</button>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div class=\"card-footer\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n<!--        <div class=\"col-sm-12 col-xl-6\">-->\r\n<!--            <div class=\"row\">-->\r\n<!--                <div class=\"col-sm-12\">-->\r\n<!--                    <div class=\"col-sm-12\">-->\r\n<!--                        <div class=\"card\">-->\r\n<!--                            <div class=\"card-header\">-->\r\n<!--                                <h5>Course List</h5>-->\r\n<!--                                <span>Full Course List.</span>-->\r\n<!--                            </div>-->\r\n<!--                            <div class=\"table-responsive\">-->\r\n<!--                                <table class=\"table\">-->\r\n<!--                                    <thead>-->\r\n<!--                                    <tr>-->\r\n<!--                                        <th scope=\"col\">#</th>-->\r\n<!--                                        <th scope=\"col\">Name</th>-->\r\n<!--                                        <th scope=\"col\">Course Name</th>-->\r\n<!--                                        <th scope=\"col\">Action</th>-->\r\n<!--                                    </tr>-->\r\n<!--                                    </thead>-->\r\n<!--                                    <tbody>-->\r\n<!--                                    <tr *ngFor=\"let record of courseList | paginate: { itemsPerPage: 10, currentPage: p } ;let indexOfElement=index\">-->\r\n<!--                                        <td>{{indexOfElement+1}}</td>-->\r\n<!--                                        <td>{{record.course_name}}</td>-->\r\n<!--                                        <td>-->\r\n<!--                                            <p *ngFor=\"let records of record.semester\"> {{records.name}} </p>-->\r\n<!--                                        </td>-->\r\n<!--                                        <td>-->\r\n<!--                                            <a (click)=\"editCourse(record)\"><mat-icon>edit</mat-icon></a>-->\r\n<!--                                            <a (click)=\"deleteCourse(record)\"><mat-icon>delete</mat-icon></a>-->\r\n<!--                                        </td>-->\r\n<!--                                    </tr>-->\r\n<!--                                    </tbody>-->\r\n<!--                                </table>-->\r\n<!--                                <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>-->\r\n\r\n<!--                            </div>-->\r\n<!--                        </div>-->\r\n<!--                    </div>-->\r\n<!--                </div>-->\r\n<!--            </div>-->\r\n<!--        </div>-->\r\n    </div>\r\n</div>\r\n<!-- Container-fluid Ends-->","import { Component } from '@angular/core';\r\nimport {FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators} from \"@angular/forms\";\r\nimport {DatePipe, formatDate, NgForOf, NgIf} from \"@angular/common\";\r\nimport {NgxPaginationModule} from \"ngx-pagination\";\r\nimport {StudentService} from \"../../../services/student.service\";\r\nimport {SubjectService} from \"../../../services/subject.service\";\r\n\r\n@Component({\r\n  selector: 'app-show-attendance',\r\n  standalone: true,\r\n    imports: [\r\n        FormsModule,\r\n        NgForOf,\r\n        NgxPaginationModule,\r\n        ReactiveFormsModule,\r\n        NgIf\r\n    ],\r\n    providers: [DatePipe],\r\n  templateUrl: './show-attendance.component.html',\r\n  styleUrl: './show-attendance.component.scss'\r\n})\r\nexport class ShowAttendanceComponent {\r\n  attendanceForm: FormGroup;\r\n  semesterList: any[];\r\n  courseList: any[];\r\n  subjectList: any[];\r\n  studentList: any[];\r\n  copyStudentList: any[];\r\n  attendanceList: any[];\r\n  isSuperAdmin = false;\r\n\r\n  constructor(private subjectService: SubjectService, private studentService: StudentService, public datepipe: DatePipe) {\r\n      let user = JSON.parse(localStorage.getItem('user') || '{}');\r\n      this.attendanceForm = new FormGroup({\r\n          id: new FormControl(null),\r\n          course_id: new FormControl(null, [Validators.required]),\r\n          semester_id: new FormControl(null, [Validators.required]),\r\n          date: new FormControl(null, [Validators.required]),\r\n          student_id: new FormControl(null),\r\n      });\r\n\r\n      if(user.user_type_id == 1){\r\n          this.studentService.getStudentListener().subscribe((response) => {\r\n              this.studentList = response;\r\n          });\r\n          this.studentList = this.studentService.getStudentLists();\r\n          this.isSuperAdmin = true;\r\n      }else{\r\n          this.studentService.getStudentListener().subscribe((response) => {\r\n              this.studentList = response;\r\n              this.attendanceForm.patchValue(this.studentList.find(x => x.id == user.id));\r\n              this.attendanceForm.patchValue({student_id: this.studentList.find(x => x.id == user.id).id});\r\n              this.attendanceForm.patchValue({date: this.datepipe.transform(new Date(), 'yyyy-MM-dd')});\r\n          });\r\n          this.studentList = this.studentService.getStudentLists();\r\n          if(this.studentList.length > 0){\r\n              this.attendanceForm.patchValue(this.studentList.find(x => x.id == user.id));\r\n              this.attendanceForm.patchValue({student_id: this.studentList.find(x => x.id == user.id).id});\r\n              this.attendanceForm.patchValue({date: this.datepipe.transform(new Date(), 'yyyy-MM-dd')});\r\n          }\r\n      }\r\n\r\n    this.subjectService.getCourseListener().subscribe((response) => {\r\n      this.courseList = response;\r\n    })\r\n    this.courseList = this.subjectService.getCourses();\r\n  }\r\n\r\n  getSemester(){\r\n    this.subjectService.getSemesterByCourseId(this.attendanceForm.value.course_id).subscribe((response) => {\r\n      // @ts-ignore\r\n      this.semesterList = response.data;\r\n    })\r\n  }\r\n\r\n  getStudents(){\r\n      this.copyStudentList = this.studentList.filter(x => x.course_id == this.attendanceForm.value.course_id);\r\n      this.copyStudentList = this.copyStudentList.filter(x => x.semester_id == this.attendanceForm.value.semester_id);\r\n  }\r\n\r\n\r\n  getStudentAttendanceList(){\r\n    this.studentList = [];\r\n    this.studentService.getUserAttendance(this.attendanceForm.value.course_id,this.attendanceForm.value.semester_id, this.attendanceForm.value.date, this.attendanceForm.value.student_id).subscribe((response) => {\r\n      // @ts-ignore\r\n      this.attendanceList = response.data;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 col-xl-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-header\">\r\n                                <h5>Attendance</h5><span>Student Attendance</span>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <form class=\"theme-form\" [formGroup]=\"attendanceForm\" *ngIf=\"isSuperAdmin\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-3 mb-3\">\r\n                                            <label>Select Course</label>\r\n                                            <select style=\"width: 100%\" formControlName=\"course_id\" class=\"form-select\" required (change)=\"getSemester()\">\r\n                                                <option *ngFor=\"let data of courseList\" [value]=\"data.id\" >\r\n                                                    {{data.course_name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-3 mb-3\">\r\n                                            <label>Select Semester</label>\r\n                                            <select style=\"width: 100%\" formControlName=\"semester_id\" class=\"form-select\" required (change)=\"getStudents()\">\r\n                                                <option *ngFor=\"let data of semesterList\" [value]=\"data.semester_id\" >\r\n                                                    {{data.name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-3 mb-3\">\r\n                                            <label>Select Date</label>\r\n                                            <input class=\"form-control\" formControlName=\"date\" type=\"date\"\r\n                                                   placeholder=\"Select date\">\r\n                                        </div>\r\n                                        <div class=\"col-md-3 mb-3\">\r\n                                            <label>Select Student</label>\r\n                                            <select style=\"width: 100%\" formControlName=\"student_id\" class=\"form-select\" required>\r\n                                                <option *ngFor=\"let data of copyStudentList\" [value]=\"data.id\" >\r\n                                                    {{data.first_name}} {{data.middle_name}} {{data.last_name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"col-md-3 mb-3\">\r\n                                            <div>\r\n                                                <button style=\"margin-top: 25px;\" (click)=\"getStudentAttendanceList()\" class=\"btn btn-primary me-1\">Search</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <form class=\"theme-form\" [formGroup]=\"attendanceForm\" *ngIf=\"!isSuperAdmin\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-3 mb-3\">\r\n                                            <label>Select Date</label>\r\n                                            <input class=\"form-control\" formControlName=\"date\" type=\"date\"\r\n                                                   placeholder=\"Select date\">\r\n                                        </div>\r\n                                        <div class=\"col-md-3 mb-3\">\r\n                                            <div>\r\n                                                <button style=\"margin-top: 25px;\" (click)=\"getStudentAttendanceList()\" class=\"btn btn-primary me-1\">Search</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card\">\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th scope=\"col\">Subject Name</th>\r\n                                        <th scope=\"col\">Attendance</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr *ngFor=\"let record of attendanceList;let indexOfElement=index\">\r\n                                        <td>{{indexOfElement+1}}</td>\r\n                                        <td>{{record.subject_name}}</td>\r\n                                        <td>{{record.attendance}}</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Container-fluid Ends-->","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Subject} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n  private BASE_API_URL = environment.BASE_API_URL;\r\n\r\n  studentList = [];\r\n\r\n  studentListSubject = new Subject<any[]>();\r\n\r\n  getStudentListener(){\r\n    return this.studentListSubject.asObservable();\r\n  }\r\n\r\n  constructor(private  http: HttpClient, private errorService: ErrorService) {\r\n    this.http.get(this.BASE_API_URL + '/getStudents').subscribe((response: any) =>{\r\n      this.studentList = response.data;\r\n      this.studentListSubject.next([...this.studentList]);\r\n    });\r\n  }\r\n\r\n  getUpdatedStudentList(){\r\n      this.http.get(this.BASE_API_URL + '/getStudents').subscribe((response: any) =>{\r\n          this.studentList = response.data;\r\n          this.studentListSubject.next([...this.studentList]);\r\n      });\r\n  }\r\n\r\n  getStudentLists(){\r\n    return [...this.studentList];\r\n  }\r\n\r\n  saveStudent(data){\r\n    return this.http.post(this.BASE_API_URL + '/saveStudent', data)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          // @ts-ignore\r\n          if(response.success == 1){\r\n            // @ts-ignore\r\n            this.studentList.push(response.data);\r\n            this.studentListSubject.next([...this.studentList]);\r\n          }\r\n        }));\r\n  }\r\n\r\n  updateStudent(value){\r\n    return this.http.post(this.BASE_API_URL + '/updateStudent', value)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          // @ts-ignore\r\n          if(response.success == 1){\r\n            // @ts-ignore\r\n            const index = this.studentList.findIndex(x => x.id === response.data.id);\r\n            // @ts-ignore\r\n            this.studentList[index] = response.data;\r\n            this.studentListSubject.next([...this.studentList]);\r\n          }\r\n        }));\r\n  }\r\n\r\n    promoteStudents(value){\r\n        return this.http.post(this.BASE_API_URL + '/promoteStudents', value)\r\n            .pipe(catchError(this.errorService.serverError), tap(response => {\r\n                // @ts-ignore\r\n                if(response.success == 1){\r\n                    this.getUpdatedStudentList();\r\n                }\r\n            }));\r\n    }\r\n\r\n  deleteStudents(id){\r\n    return this.http.get(this.BASE_API_URL + '/deleteMember/' + id)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          // @ts-ignore\r\n          if(response.success == 1){\r\n            // @ts-ignore\r\n            const index = this.studentList.findIndex(x => x.id === response.data.id);\r\n            this.studentList.splice(index,1);\r\n            this.studentListSubject.next([...this.studentList]);\r\n          }\r\n        }));\r\n  }\r\n\r\n  getStudentAttendance(course_id,semester_id,date,subject_id){\r\n      return this.http.get(this.BASE_API_URL + '/getStudentAttendance/' + course_id + '/' + semester_id + '/' + date + '/' + subject_id)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          }));\r\n  }\r\n\r\n  getUserAttendance(course_id,semester_id,date,user_id){\r\n      return this.http.get(this.BASE_API_URL + '/getStudentOwnAttendance/' + course_id + '/' + semester_id + '/' + date + '/' + user_id)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          }));\r\n  }\r\n\r\n  saveStudentAttendance(data){\r\n      return this.http.post(this.BASE_API_URL + '/saveAttendance',data)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Subject} from \"rxjs\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {ɵFormGroupValue, ɵTypedOrUntyped} from \"@angular/forms\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubjectService {\r\n  private BASE_API_URL = environment.BASE_API_URL;\r\n  semesterList = [];\r\n  courseList = [];\r\n  subjectList = [];\r\n  weekList = [];\r\n  subjectGroupList = [];\r\n\r\n  semesterSubject = new Subject<any[]>();\r\n  coursesSubject = new Subject<any[]>();\r\n  subjectListSubject = new Subject<any[]>();\r\n  weekListSubject = new Subject<any[]>();\r\n  subjectGroupSubject = new Subject<any[]>();\r\n\r\n  getSemesterListener(){\r\n    return this.semesterSubject.asObservable();\r\n  }\r\n  subjectGroupListener(){\r\n    return this.subjectGroupSubject.asObservable();\r\n  }\r\n\r\n    getWeekListener(){\r\n        return this.weekListSubject.asObservable();\r\n    }\r\n\r\n    getSubjectListListener(){\r\n        return this.subjectListSubject.asObservable();\r\n    }\r\n\r\n  getCourseListener(){\r\n    return this.coursesSubject.asObservable();\r\n  }\r\n\r\n\r\n  constructor(private  http: HttpClient, private errorService: ErrorService) {\r\n    this.http.get(this.BASE_API_URL + '/getSemester').subscribe((response: any) =>{\r\n      this.semesterList = response.data;\r\n      this.semesterSubject.next([...this.semesterList]);\r\n    });\r\n\r\n    this.http.get(this.BASE_API_URL + '/getCourse').subscribe((response: any) =>{\r\n      this.courseList = response.data;\r\n      this.coursesSubject.next([...this.courseList]);\r\n    });\r\n\r\n      this.http.get(this.BASE_API_URL + '/getWeekdays').subscribe((response: any) =>{\r\n          this.weekList = response.data;\r\n          this.weekListSubject.next([...this.weekList]);\r\n      });\r\n\r\n      this.http.get(this.BASE_API_URL + '/getSubject').subscribe((response: any) =>{\r\n          this.subjectList = response.data;\r\n          this.subjectListSubject.next([...this.subjectList]);\r\n      });\r\n\r\n      this.http.get(this.BASE_API_URL + '/getSubjectGroup').subscribe((response: any) =>{\r\n          this.subjectGroupList = response.data;\r\n          this.subjectGroupSubject.next([...this.subjectGroupList]);\r\n      });\r\n  }\r\n\r\n  updateSemester(value){\r\n    return this.http.post(this.BASE_API_URL + '/updateSemester', value)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n            // @ts-ignore\r\n            if(response.success ==1){\r\n                // @ts-ignore\r\n                const index = this.semesterList.findIndex(x => x.id === response.data.id);\r\n                // @ts-ignore\r\n                this.semesterList[index] = response.data;\r\n                this.semesterSubject.next([...this.semesterList]);\r\n            }\r\n        }));\r\n  }\r\n\r\n  getCourses(){\r\n    return [...this.courseList];\r\n  }\r\n\r\n  getWeekDays(){\r\n      return [...this.weekList];\r\n  }\r\n\r\n  getSubjectGroupList(){\r\n      return [...this.subjectGroupList];\r\n  }\r\n\r\n\r\n\r\n  getSemester(){\r\n    return [...this.semesterList];\r\n  }\r\n\r\n  getSubjectList(){\r\n      return [...this.subjectList];\r\n  }\r\n\r\n\r\n  deleteSemester(value){\r\n    return this.http.get(this.BASE_API_URL + '/deleteSemester/' + value)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n            // @ts-ignore\r\n            if(response.success ==1){\r\n                // @ts-ignore\r\n                const index = this.semesterList.findIndex(x => x.id === response.data.id);\r\n                this.semesterList.splice(index,1);\r\n                this.semesterSubject.next([...this.semesterList]);\r\n            }\r\n        }));\r\n  }\r\n\r\n  saveCourse(data){\r\n      return this.http.post(this.BASE_API_URL + '/saveCourse', data)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n              // @ts-ignore\r\n              if(response.success == 1){\r\n                  // @ts-ignore\r\n                  this.courseList.push(response.data);\r\n                  this.coursesSubject.next([...this.courseList]);\r\n              }\r\n          }));\r\n  }\r\n\r\n  saveSubject(data){\r\n      return this.http.post(this.BASE_API_URL + '/saveSubject', data)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n              // @ts-ignore\r\n              if(response.success == 1){\r\n                  // @ts-ignore\r\n                  this.subjectList.push(response.data);\r\n                  this.subjectListSubject.next([...this.subjectList]);\r\n              }\r\n          }));\r\n  }\r\n\r\n  updateSubject(data){\r\n      return this.http.post(this.BASE_API_URL + '/updateSubject', data)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n              // @ts-ignore\r\n              if(response.success == 1){\r\n                  // @ts-ignore\r\n                  const index = this.subjectList.findIndex(x => x.id === response.data.id);\r\n                  // @ts-ignore\r\n                  this.subjectList[index] = response.data;\r\n                  this.subjectListSubject.next([...this.subjectList]);\r\n              }\r\n          }));\r\n  }\r\n\r\n  getSemesterByCourseId(course_id){\r\n      return this.http.get(this.BASE_API_URL + '/getSemesterByCourse/' + course_id)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          }));\r\n  }\r\n\r\n  getSemesterTimeTable(course_id, semester_id){\r\n      return this.http.get(this.BASE_API_URL + '/getSemesterTimeTableByCourseAndSemesterId/' + course_id + '/' + semester_id)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          }));\r\n  }\r\n\r\n  getSubjects(course_id, semester_id){\r\n      return this.http.get(this.BASE_API_URL + '/getSubject/' + course_id + '/' + semester_id)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          }));\r\n  }\r\n\r\n    getTeacherList(course_id, semester_id){\r\n        return this.http.get(this.BASE_API_URL + '/getTeacherByCourseAndSem/' + course_id + '/' + semester_id)\r\n            .pipe(catchError(this.errorService.serverError), tap(response => {\r\n            }));\r\n    }\r\n\r\n\r\n  deleteSubject(value){\r\n      return this.http.get(this.BASE_API_URL + '/deleteSubject/' + value)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n              // @ts-ignore\r\n              if(response.success ==1){\r\n                  // @ts-ignore\r\n                  const index = this.subjectList.findIndex(x => x.id === response.data.id);\r\n                  this.subjectList.splice(index,1);\r\n                  this.subjectListSubject.next([...this.subjectList]);\r\n              }\r\n          }));\r\n  }\r\n\r\n  deleteCourse(value){\r\n      return this.http.get(this.BASE_API_URL + '/deleteCourse/' + value)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n              // @ts-ignore\r\n              if(response.success ==1){\r\n                  // @ts-ignore\r\n                  const index = this.courseList.findIndex(x => x.id === response.data.id);\r\n                  this.courseList.splice(index,1);\r\n                  this.coursesSubject.next([...this.courseList]);\r\n              }\r\n          }));\r\n  }\r\n\r\n  saveSemester(value){\r\n    return this.http.post(this.BASE_API_URL + '/saveSemester', value)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          // @ts-ignore\r\n          this.semesterList.push(response.data);\r\n          this.semesterSubject.next([...this.semesterList]);\r\n        }));\r\n  }\r\n\r\n  updateCourse(data){\r\n      return this.http.post(this.BASE_API_URL + '/updateCourse', data)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n              // @ts-ignore\r\n              if(response.success == 1){\r\n                  // @ts-ignore\r\n                  const index = this.courseList.findIndex(x => x.id === response.data.id);\r\n                  // @ts-ignore\r\n                  this.courseList[index] = response.data;\r\n                  this.coursesSubject.next([...this.courseList]);\r\n              }\r\n          }));\r\n  }\r\n\r\n  createSemesterTimetable(value){\r\n      return this.http.post(this.BASE_API_URL + '/saveSemesterTimeTable', value)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          }));\r\n  }\r\n\r\n  updateSemesterTimeTable(data){\r\n      return this.http.post(this.BASE_API_URL + '/updateSemesterTimeTable', data)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n\r\n          }));\r\n  }\r\n\r\n  deleteSemesterTimeTable(id){\r\n      return this.http.get(this.BASE_API_URL + '/deleteSemesterTimeTable/' + id)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n\r\n          }));\r\n  }\r\n\r\n  saveSubjectGroup(value){\r\n      return this.http.post(this.BASE_API_URL + '/saveSubjectGroup', value)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n              // @ts-ignore\r\n              if(response.success == 1){\r\n                  // @ts-ignore\r\n                  this.subjectGroupList = response.data;\r\n                  this.subjectGroupSubject.next([...this.subjectGroupList]);\r\n              }\r\n          }));\r\n  }\r\n\r\n  updateSubjectGroup(value){\r\n      return this.http.post(this.BASE_API_URL + '/updateSubjectGroup', value)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n              // @ts-ignore\r\n              if(response.success == 1){\r\n                  // @ts-ignore\r\n                  this.subjectGroupList = response.data;\r\n                  this.subjectGroupSubject.next([...this.subjectGroupList]);\r\n              }\r\n          }));\r\n  }\r\n\r\n  deleteSubjectGroup(course_id){\r\n      return this.http.get(this.BASE_API_URL + '/deleteSubjectGroup/' + course_id)\r\n          .pipe(catchError(this.errorService.serverError), tap(response => {\r\n              // @ts-ignore\r\n              if(response.success ==1){\r\n                  // @ts-ignore\r\n                  this.subjectGroupList = response.data;\r\n                  this.subjectGroupSubject.next([...this.subjectGroupList]);\r\n              }\r\n          }));\r\n  }\r\n\r\n\r\n}\r\n"],"names":["RouterModule","PeriodAttendanceComponent","ShowAttendanceComponent","routes","path","children","component","data","title","breadcrumb","AttendanceRoutingModule","_","_2","_3","forChild","imports","i1","exports","CommonModule","AttendanceModule","FormControl","FormGroup","FormsModule","ReactiveFormsModule","Validators","MatIconModule","NgForOf","NgxPaginationModule","Swal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","data_r4","id","ɵɵadvance","ɵɵtextInterpolate1","course_name","data_r5","semester_id","name","data_r6","ɵɵlistener","PeriodAttendanceComponent_tr_51_Template_input_ngModelChange_6_listener","$event","restoredCtx","ɵɵrestoreView","_r10","record_r7","$implicit","ɵɵresetView","attendance","PeriodAttendanceComponent_tr_51_Template_input_ngModelChange_9_listener","ɵɵtextInterpolate","indexOfElement_r8","ɵɵtextInterpolate3","first_name","middle_name","last_name","ɵɵpropertyInterpolate1","constructor","subjectService","studentService","studentList","attendanceForm","course_id","required","date","subject_id","getCourseListener","subscribe","response","courseList","getCourses","getSemester","getSemesterByCourseId","value","semesterList","getSubject","getSubjects","subjectList","getStudentAttendanceList","getStudentAttendance","saveAttendance","forEach","saveStudentAttendance","success","fire","position","icon","showConfirmButton","timer","reset","ɵɵdirectiveInject","SubjectService","i2","StudentService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","PeriodAttendanceComponent_Template","rf","ctx","PeriodAttendanceComponent_Template_select_change_17_listener","ɵɵtemplate","PeriodAttendanceComponent_option_18_Template","PeriodAttendanceComponent_Template_select_change_22_listener","PeriodAttendanceComponent_option_23_Template","ɵɵelement","PeriodAttendanceComponent_Template_select_change_31_listener","PeriodAttendanceComponent_option_32_Template","PeriodAttendanceComponent_tr_51_Template","PeriodAttendanceComponent_Template_button_click_53_listener","length","ɵɵpipeBind2","ɵɵpureFunction1","_c0","p","i3","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","i4","PaginatePipe","FormGroupDirective","FormControlName","styles","DatePipe","NgIf","data_r7","data_r8","ShowAttendanceComponent_form_13_Template_select_change_5_listener","ctx_r9","ɵɵnextContext","ShowAttendanceComponent_form_13_option_6_Template","ShowAttendanceComponent_form_13_Template_select_change_10_listener","ctx_r11","getStudents","ShowAttendanceComponent_form_13_option_11_Template","ShowAttendanceComponent_form_13_option_20_Template","ShowAttendanceComponent_form_13_Template_button_click_23_listener","ctx_r12","ctx_r0","copyStudentList","ShowAttendanceComponent_form_14_Template_button_click_8_listener","_r14","ctx_r13","ctx_r1","indexOfElement_r16","record_r15","subject_name","datepipe","isSuperAdmin","user","JSON","parse","localStorage","getItem","student_id","user_type_id","getStudentListener","getStudentLists","patchValue","find","x","transform","Date","filter","getUserAttendance","attendanceList","ɵɵProvidersFeature","ShowAttendanceComponent_Template","ShowAttendanceComponent_form_13_Template","ShowAttendanceComponent_form_14_Template","ShowAttendanceComponent_tr_27_Template","Subject","environment","catchError","tap","studentListSubject","asObservable","http","errorService","BASE_API_URL","get","next","getUpdatedStudentList","saveStudent","post","pipe","serverError","push","updateStudent","index","findIndex","promoteStudents","deleteStudents","splice","user_id","ɵɵinject","HttpClient","ErrorService","factory","ɵfac","providedIn","getSemesterListener","semesterSubject","subjectGroupListener","subjectGroupSubject","getWeekListener","weekListSubject","getSubjectListListener","subjectListSubject","coursesSubject","weekList","subjectGroupList","updateSemester","getWeekDays","getSubjectGroupList","getSubjectList","deleteSemester","saveCourse","saveSubject","updateSubject","getSemesterTimeTable","getTeacherList","deleteSubject","deleteCourse","saveSemester","updateCourse","createSemesterTimetable","updateSemesterTimeTable","deleteSemesterTimeTable","saveSubjectGroup","updateSubjectGroup","deleteSubjectGroup"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}