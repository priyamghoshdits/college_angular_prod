{"version":3,"file":"src_app_components_communication_communication_module_ts.50e0eaf710300b54.js","mappings":"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","sources":["./src/app/components/communication/communication-routing.module.ts","./src/app/components/communication/communication.module.ts","./src/app/components/communication/notice/notice.component.ts","./src/app/components/communication/notice/notice.component.html","./src/app/services/communication.service.ts","./src/app/services/roles-and-permission.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {NoticeComponent} from \"./notice/notice.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'notice',\r\n        component: NoticeComponent,\r\n        data: {\r\n          title: \"Notice\",\r\n          breadcrumb: \"Notice\"\r\n        }\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CommunicationRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CommunicationRoutingModule } from './communication-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    CommunicationRoutingModule\r\n  ]\r\n})\r\nexport class CommunicationModule { }\r\n","import { Component } from '@angular/core';\r\nimport {CommunicationService} from \"../../../services/communication.service\";\r\nimport {MatIcon, MatIconModule} from \"@angular/material/icon\";\r\nimport {DatePipe, NgForOf, NgIf} from \"@angular/common\";\r\nimport {NgxPaginationModule} from \"ngx-pagination\";\r\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\r\nimport Swal from \"sweetalert2\";\r\nimport {CKEditorModule} from \"@ckeditor/ckeditor5-angular\";\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport {RolesAndPermissionService} from \"../../../services/roles-and-permission.service\";\r\nimport {cloneDeep} from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-notice',\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    NgForOf,\r\n    NgxPaginationModule,\r\n    ReactiveFormsModule,\r\n    CKEditorModule,\r\n    NgIf,\r\n    DatePipe\r\n  ],\r\n  templateUrl: './notice.component.html',\r\n  styleUrl: './notice.component.scss'\r\n})\r\nexport class NoticeComponent {\r\n\r\n  editor = ClassicEditor;\r\n  data: any = `<p>Hello, world!</p>`;\r\n\r\n  config : any= {\r\n    toolbar: [\r\n      'undo',\r\n      'redo',\r\n      '|',\r\n      'heading',\r\n      'fontFamily',\r\n      'fontSize',\r\n      '|',\r\n      'bold',\r\n      'italic',\r\n      'underline',\r\n      'fontColor',\r\n      'fontBackgroundColor',\r\n      'highlight',\r\n      '|',\r\n      'link',\r\n      'CKFinder',\r\n      'imageUpload',\r\n      'mediaEmbed',\r\n      '|',\r\n      'alignment',\r\n      'bulletedList',\r\n      'numberedList',\r\n      '|',\r\n      'indent',\r\n      'outdent',\r\n      '|',\r\n      'insertTable',\r\n      'blockQuote',\r\n      'specialCharacters'\r\n    ],\r\n    language: 'id',\r\n    image: {\r\n      toolbar: [\r\n        'imageTextAlternative',\r\n        'imageStyle:full',\r\n        'imageStyle:side'\r\n      ]\r\n    },\r\n  }\r\n\r\n  noticeForm: FormGroup;\r\n  noticeList: any[];\r\n  userTypeList: any[];\r\n  cloneUserTypeList: any[];\r\n  tempUserTypes: any[] = [];\r\n  isUpdatable = false;\r\n  p:number;\r\n  rolesAndPermission: any[] = [];\r\n  permission: any[] = [];\r\n  constructor(private communicationService: CommunicationService, private roleAndPermissionService: RolesAndPermissionService) {\r\n    this.noticeForm = new FormGroup({\r\n      id: new FormControl(null),\r\n      subject: new FormControl(null, [Validators.required]),\r\n      body: new FormControl(null, [Validators.required]),\r\n    });\r\n    this.communicationService.getNoticeListListener().subscribe((response) => {\r\n      this.noticeList = response;\r\n    });\r\n    this.noticeList = this.communicationService.getNoticeList();\r\n\r\n    this.communicationService.getUserTypeListListener().subscribe((response) => {\r\n      this.userTypeList = response;\r\n      this.cloneUserTypeList = cloneDeep(this.userTypeList);\r\n    });\r\n    this.userTypeList = this.communicationService.getUserTypeList();\r\n    if(this.userTypeList.length > 0){\r\n      this.cloneUserTypeList = cloneDeep(this.userTypeList);\r\n    }\r\n\r\n    this.roleAndPermissionService.getRolesAndPermissionListener().subscribe((response) => {\r\n      this.rolesAndPermission = response;\r\n      this.permission = this.rolesAndPermission.find(x => x.name == 'NOTICE').permission;\r\n    });\r\n    this.rolesAndPermission = this.roleAndPermissionService.getRolesAndPermission();\r\n    if(this.rolesAndPermission.length > 0){\r\n      this.permission = this.rolesAndPermission.find(x => x.name == 'NOTICE').permission;\r\n    }\r\n\r\n  }\r\n\r\n  importUserTypes(data, event){\r\n    let userTypes;\r\n    if(event.target.checked){\r\n      userTypes = [\r\n        {\"id\": data.id, \"name\": data.name}\r\n      ];\r\n      // @ts-ignore\r\n      this.tempUserTypes.push(userTypes[0]);\r\n    }else{\r\n      // @ts-ignore\r\n      let index = this.tempUserTypes.findIndex(x => x.id === data.id)\r\n      this.tempUserTypes.splice(index,1);\r\n    }\r\n  }\r\n\r\n  editNotice(data){\r\n    let received_data = data.mailed_to_id.split(',');\r\n\r\n    this.userTypeList.forEach(function (value){\r\n      received_data.forEach(function (value2){\r\n        if(value.id === parseInt(value2)){\r\n          value.checked = true;\r\n        }\r\n      })\r\n    })\r\n    this.tempUserTypes = this.userTypeList.filter(x => x.checked == true);\r\n\r\n    this.noticeForm.patchValue(data);\r\n    this.isUpdatable = true;\r\n  }\r\n\r\n  updateNotice(){\r\n    let arr;\r\n    arr = [\r\n      {\r\n        id: this.noticeForm.value.id,\r\n        subject: this.noticeForm.value.subject,\r\n        body: this.noticeForm.value.body,\r\n        mail_to : this.tempUserTypes\r\n      }\r\n    ];\r\n    this.communicationService.updateNotice(arr[0]).subscribe((response: any) => {\r\n      if(response.success == 1){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Notice Updated',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        });\r\n        this.cancelUpdate();\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelUpdate(){\r\n    this.isUpdatable = false;\r\n    this.tempUserTypes = [];\r\n    this.noticeForm.reset();\r\n    this.userTypeList= cloneDeep(this.cloneUserTypeList);\r\n    // this.userTypeList.forEach(function (value){\r\n    //   value.checked = false;\r\n    // })\r\n  }\r\n\r\n  saveNotice(){\r\n    let arr;\r\n    arr = [\r\n        {\r\n          subject: this.noticeForm.value.subject,\r\n          body: this.noticeForm.value.body,\r\n          mail_to : this.tempUserTypes\r\n      }\r\n    ];\r\n    this.communicationService.saveNotices(arr[0]).subscribe((response) => {\r\n      // @ts-ignore\r\n      if(response.success == 1){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Notice Saved',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        });\r\n        this.noticeForm.reset();\r\n        this.userTypeList= cloneDeep(this.cloneUserTypeList);\r\n        this.tempUserTypes = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteNotice(data){\r\n\r\n    Swal.fire({\r\n      title: 'Confirmation',\r\n      text: 'Do you sure to delete ?',\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete It!'\r\n    }).then((result) => {\r\n      if(result.isConfirmed){\r\n        this.communicationService.deleteNotice(data.id).subscribe((response) => {\r\n          // @ts-ignore\r\n          if(response.success == 1) {\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: 'Notice Deleted',\r\n              showConfirmButton: false,\r\n              timer: 1000\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\" *ngIf=\"permission.length > 0\">\r\n        <div class=\"col-sm-12 col-xl-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            <h5>Notices</h5><span>Add Notice</span>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <form class=\"theme-form\" [formGroup]=\"noticeForm\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 mb-3\">\r\n                                        <label>Subject</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"subject\" placeholder=\"Enter Subject\" required>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 mb-3\">\r\n                                        <div class=\"form-group mb-0\">\r\n                                            <label for=\"exampleFormControlTextarea4\">Message</label>\r\n<!--                                            <textarea class=\"form-control\" formControlName=\"body\" id=\"exampleFormControlTextarea4\" rows=\"10\"></textarea>-->\r\n                                            <ckeditor style=\"min-height: 350px\" [editor]=\"editor\" formControlName=\"body\" [config]=\"config\" [data]=\"data\"></ckeditor>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 mb-3\">\r\n                                        <label>Mail to</label>\r\n                                        <div *ngFor=\"let record of userTypeList\">\r\n                                            <input style=\"margin: 10px !important;\" [checked]=\"record.checked\" id=\"checkbox-primary-1\" type=\"checkbox\" (change)=\"importUserTypes(record, $event)\">\r\n                                            <label for=\"checkbox-primary-1\"> {{record.name}}</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"card-footer\">\r\n                            <button *ngIf=\"permission[0].permission == 1\" [hidden]=\"isUpdatable == true\" class=\"btn btn-primary me-1\" (click)=\"saveNotice()\">Submit</button>\r\n                            <button *ngIf=\"permission[1].permission == 1\" [hidden]=\"isUpdatable == false\" class=\"btn btn-primary me-1\" (click)=\"updateNotice()\">Update</button>\r\n                            <button [hidden]=\"isUpdatable == false\" class=\"btn btn-primary me-1\" (click)=\"cancelUpdate()\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-xl-6\">\r\n            <div class=\"row\" *ngIf=\"permission[3].permission == 1\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-header\">\r\n                                <h5>Notice</h5>\r\n                                <span>Notice List.</span>\r\n                            </div>\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th scope=\"col\">Subject</th>\r\n                                        <th scope=\"col\">Message</th>\r\n                                        <th scope=\"col\">Published On</th>\r\n                                        <th scope=\"col\">Sent to</th>\r\n                                        <th scope=\"col\" *ngIf=\"permission[1].permission == 1 && permission[2].permission == 1\">Action</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr *ngFor=\"let record of noticeList | paginate: { itemsPerPage: 10, currentPage: p } ;let indexOfElement=index\">\r\n                                        <td>{{indexOfElement+1}}</td>\r\n                                        <td>{{record.subject}}</td>\r\n                                        <td>{{record.body}}</td>\r\n                                        <td>{{record.published_on | date}}</td>\r\n                                        <td>{{record.mailed_to}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"permission[1].permission == 1\" (click)=\"editNotice(record)\"><mat-icon>edit</mat-icon></a>\r\n                                            <a *ngIf=\"permission[2].permission == 1\" (click)=\"deleteNotice(record)\"><mat-icon>delete</mat-icon></a>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Container-fluid Ends-->","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Subject} from \"rxjs\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommunicationService {\r\n  private BASE_API_URL = environment.BASE_API_URL;\r\n  noticeList = [];\r\n  userTypeList = [];\r\n\r\n  noticeListSubject = new Subject<any[]>();\r\n  userTypeListSubject = new Subject<any[]>();\r\n\r\n  getNoticeListListener(){\r\n    return this.noticeListSubject.asObservable();\r\n  }\r\n  getUserTypeListListener(){\r\n    return this.userTypeListSubject.asObservable();\r\n  }\r\n\r\n\r\n  constructor(private  http: HttpClient, private errorService: ErrorService) {\r\n    this.http.get(this.BASE_API_URL + '/getNotices').subscribe((response: any) =>{\r\n      this.noticeList = response.data;\r\n      this.noticeListSubject.next([...this.noticeList]);\r\n    });\r\n\r\n    this.http.get(this.BASE_API_URL + '/getUserTypes').subscribe((response: any) =>{\r\n      this.userTypeList = response.data;\r\n      this.userTypeListSubject.next([...this.userTypeList]);\r\n    });\r\n  }\r\n\r\n  getNoticeList(){\r\n    return [...this.noticeList];\r\n  }\r\n\r\n  getUserTypeList(){\r\n    return [...this.userTypeList];\r\n  }\r\n\r\n  saveNotices(value){\r\n    return this.http.post(this.BASE_API_URL + '/saveNotices', value)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n            // @ts-ignore\r\n          if(response.success == 1){\r\n              // @ts-ignore\r\n              this.noticeList.push(response.data);\r\n            this.noticeListSubject.next([...this.noticeList]);\r\n            }\r\n        }));\r\n  }\r\n\r\n  deleteNotice(id){\r\n    return this.http.get(this.BASE_API_URL + '/deleteNotice/' + id)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          // @ts-ignore\r\n          if(response.success == 1){\r\n            // @ts-ignore\r\n            const index = this.noticeList.findIndex(x => x.id === response.data.id);\r\n            // @ts-ignore\r\n            this.noticeList.splice(index,1);\r\n            this.noticeListSubject.next([...this.noticeList]);\r\n          }\r\n        }));\r\n  }\r\n\r\n  updateNotice(data){\r\n    return this.http.post(this.BASE_API_URL + '/updateNotices', data)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          // @ts-ignore\r\n          if(response.success == 1){\r\n            // @ts-ignore\r\n            const index = this.noticeList.findIndex(x => x.id === response.data.id);\r\n            // @ts-ignore\r\n            this.noticeList[index] = response.data;\r\n            this.noticeListSubject.next([...this.noticeList]);\r\n          }\r\n        }));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Subject} from \"rxjs\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RolesAndPermissionService {\r\n  private BASE_API_URL = environment.BASE_API_URL;\r\n  rolesAndPermission = [];\r\n  rolesAndPermissionAdmin = [];\r\n\r\n  menuManagement = [];\r\n\r\n\r\n  rolesAndPermissionSubject = new Subject<any[]>();\r\n  rolesAndPermissionAdminSubject = new Subject<any[]>();\r\n\r\n  getRolesAndPermissionListener(){\r\n    return this.rolesAndPermissionSubject.asObservable();\r\n  }\r\n  getRolesAndPermissionAdminListener(){\r\n    return this.rolesAndPermissionAdminSubject.asObservable();\r\n  }\r\n\r\n  menuManagementSubject = new Subject<any[]>();\r\n\r\n  getMenuManagementListener(){\r\n    return this.menuManagementSubject.asObservable();\r\n  }\r\n\r\n  constructor(private  http: HttpClient, private errorService: ErrorService) {\r\n    this.http.get(this.BASE_API_URL + '/getRolesAndPermission').subscribe((response: any) =>{\r\n      this.rolesAndPermission = response.data;\r\n      this.rolesAndPermissionSubject.next([...this.rolesAndPermission]);\r\n    });\r\n\r\n    this.http.get(this.BASE_API_URL + '/getMenuForUpdate').subscribe((response: any) =>{\r\n      this.menuManagement = response.data;\r\n      this.menuManagementSubject.next([...this.menuManagement]);\r\n    });\r\n\r\n    this.http.get(this.BASE_API_URL + '/getRolesAndPermissionForUpdate').subscribe((response: any) =>{\r\n      this.rolesAndPermissionAdmin = response.data;\r\n      this.rolesAndPermissionAdminSubject.next([...this.rolesAndPermissionAdmin]);\r\n    });\r\n\r\n  }\r\n\r\n  getRolesAndPermission(){\r\n    return [...this.rolesAndPermission];\r\n  }\r\n\r\n  getRolesAndPermissionAdmin(){\r\n    return [...this.rolesAndPermissionAdmin];\r\n  }\r\n\r\n  updateRoleAndPermissions(id){\r\n    return this.http.get(this.BASE_API_URL + '/updateRoleAndPermissions/' + id)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n        }));\r\n  }\r\n\r\n  getMenuManagement(){\r\n    return [...this.menuManagement];\r\n  }\r\n\r\n  updatePermissions(id){\r\n    return this.http.get(this.BASE_API_URL + '/updateMenuManagement/' + id)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n        }));\r\n  }\r\n\r\n}\r\n"],"names":["RouterModule","NoticeComponent","routes","path","children","component","data","title","breadcrumb","CommunicationRoutingModule","_","_2","_3","forChild","imports","i1","exports","CommonModule","CommunicationModule","MatIconModule","DatePipe","NgForOf","NgIf","NgxPaginationModule","FormControl","FormGroup","ReactiveFormsModule","Validators","Swal","CKEditorModule","ClassicEditor","cloneDeep","i0","ɵɵelementStart","ɵɵlistener","NoticeComponent_div_1_div_27_Template_input_change_1_listener","$event","restoredCtx","ɵɵrestoreView","_r7","record_r5","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","importUserTypes","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","checked","ɵɵtextInterpolate1","name","NoticeComponent_div_1_button_29_Template_button_click_0_listener","_r9","ctx_r8","saveNotice","ctx_r2","isUpdatable","NoticeComponent_div_1_button_30_Template_button_click_0_listener","_r11","ctx_r10","updateNotice","ctx_r3","NoticeComponent_div_1_div_34_tr_25_a_13_Template_a_click_0_listener","_r20","record_r14","ctx_r18","editNotice","NoticeComponent_div_1_div_34_tr_25_a_14_Template_a_click_0_listener","_r23","ctx_r21","deleteNotice","ɵɵtemplate","NoticeComponent_div_1_div_34_tr_25_a_13_Template","NoticeComponent_div_1_div_34_tr_25_a_14_Template","ɵɵtextInterpolate","indexOfElement_r15","subject","body","ɵɵpipeBind1","published_on","mailed_to","ctx_r13","permission","NoticeComponent_div_1_div_34_th_23_Template","NoticeComponent_div_1_div_34_tr_25_Template","NoticeComponent_div_1_div_34_Template_pagination_controls_pageChange_27_listener","_r25","ctx_r24","p","ctx_r4","ɵɵpipeBind2","noticeList","ɵɵpureFunction1","_c0","ɵɵelement","NoticeComponent_div_1_div_27_Template","NoticeComponent_div_1_button_29_Template","NoticeComponent_div_1_button_30_Template","NoticeComponent_div_1_Template_button_click_31_listener","_r27","ctx_r26","cancelUpdate","NoticeComponent_div_1_div_34_Template","ctx_r0","noticeForm","editor","config","userTypeList","constructor","communicationService","roleAndPermissionService","toolbar","language","image","tempUserTypes","rolesAndPermission","id","required","getNoticeListListener","subscribe","response","getNoticeList","getUserTypeListListener","cloneUserTypeList","getUserTypeList","length","getRolesAndPermissionListener","find","x","getRolesAndPermission","event","userTypes","target","push","index","findIndex","splice","received_data","mailed_to_id","split","forEach","value","value2","parseInt","filter","patchValue","arr","mail_to","success","fire","position","icon","showConfirmButton","timer","reset","saveNotices","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","ɵɵdirectiveInject","CommunicationService","i2","RolesAndPermissionService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NoticeComponent_Template","rf","ctx","NoticeComponent_div_1_Template","i3","MatIcon","i4","PaginatePipe","PaginationControlsComponent","i5","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i6","CKEditorComponent","styles","environment","Subject","catchError","tap","noticeListSubject","asObservable","userTypeListSubject","http","errorService","BASE_API_URL","get","next","post","pipe","serverError","ɵɵinject","HttpClient","ErrorService","factory","ɵfac","providedIn","rolesAndPermissionSubject","getRolesAndPermissionAdminListener","rolesAndPermissionAdminSubject","getMenuManagementListener","menuManagementSubject","rolesAndPermissionAdmin","menuManagement","getRolesAndPermissionAdmin","updateRoleAndPermissions","getMenuManagement","updatePermissions"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}