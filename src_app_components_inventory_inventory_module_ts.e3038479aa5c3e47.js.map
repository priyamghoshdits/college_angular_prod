{"version":3,"file":"src_app_components_inventory_inventory_module_ts.e3038479aa5c3e47.js","mappings":"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","sources":["./src/app/components/inventory/add-items/add-items.component.ts","./src/app/components/inventory/add-items/add-items.component.html","./src/app/components/inventory/inventory-routing.module.ts","./src/app/components/inventory/inventory.module.ts","./src/app/components/inventory/item-type/item-type.component.ts","./src/app/components/inventory/item-type/item-type.component.html","./src/app/services/inventory.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {InventoryService} from \"../../../services/inventory.service\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {NgForOf} from \"@angular/common\";\r\nimport {NgxPaginationModule} from \"ngx-pagination\";\r\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: 'app-add-items',\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    NgForOf,\r\n    NgxPaginationModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  templateUrl: './add-items.component.html',\r\n  styleUrl: './add-items.component.scss'\r\n})\r\nexport class AddItemsComponent {\r\n  inventoryItemsForm: FormGroup;\r\n  itemCategoryList: any[];\r\n  itemList: any[];\r\n  isUpdatable = false;\r\n  p:number;\r\n  constructor(private inventoryService: InventoryService) {\r\n    this.inventoryItemsForm = new FormGroup({\r\n      id: new FormControl(null),\r\n      name: new FormControl(null, [Validators.required]),\r\n      item_type_id: new FormControl(0, [Validators.required]),\r\n      unit: new FormControl(null, [Validators.required]),\r\n      description: new FormControl(null),\r\n    });\r\n    this.inventoryService.getItemCategoryListListener().subscribe((response) => {\r\n      this.itemCategoryList = response;\r\n    })\r\n    this.itemCategoryList = this.inventoryService.getItemCategory();\r\n\r\n    this.inventoryService.getItemListListener().subscribe((response) => {\r\n      this.itemList = response;\r\n    });\r\n    this.itemList = this.inventoryService.getItem();\r\n  }\r\n\r\n  saveItems(){\r\n    Swal.fire({\r\n      title: 'Please Wait !',\r\n      html: 'Saving ...', // add html attribute if you want or remove\r\n      allowOutsideClick: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n    this.inventoryService.saveItems(this.inventoryItemsForm.value).subscribe((response) => {\r\n      // @ts-ignore\r\n      if(response.success == 1){\r\n        Swal.close();\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Item Saved',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        });\r\n        this.inventoryItemsForm.reset();\r\n      }\r\n    })\r\n  }\r\n  updateItems(){\r\n    Swal.fire({\r\n      title: 'Please Wait !',\r\n      html: 'Updating ...', // add html attribute if you want or remove\r\n      allowOutsideClick: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n    this.inventoryService.updateItems(this.inventoryItemsForm.value).subscribe((response) => {\r\n      Swal.close();\r\n      // @ts-ignore\r\n      if(response.success == 1){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Item Updated',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        });\r\n        this.cancelUpdate();\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelUpdate(){\r\n    this.inventoryItemsForm.reset();\r\n    this.isUpdatable = false;\r\n  }\r\n\r\n  editItem(data){\r\n    this.inventoryItemsForm.patchValue(data);\r\n    this.isUpdatable = true;\r\n  }\r\n\r\n  deleteItem(data){\r\n    Swal.fire({\r\n      title: 'Confirmation',\r\n      text: 'Do you sure to delete Item ?',\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete It!'\r\n    }).then((result) => {\r\n      this.inventoryService.deleteItems(data.id).subscribe((response) => {\r\n        // @ts-ignore\r\n        if(response.success == 1){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Item Deleted',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 col-xl-5\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            <h5>Items</h5><span>Add Item</span>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <form class=\"theme-form\" [formGroup]=\"inventoryItemsForm\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6 mb-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"col-form-label pt-0\" for=\"exampleInputEmail1\">Name</label>\r\n                                            <input class=\"form-control\" formControlName=\"name\" id=\"exampleInputEmail1\" type=\"text\"\r\n                                                   placeholder=\"Enter Name\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-6 mb-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Select Type</label>\r\n                                            <select style=\"width: 100%\" formControlName=\"item_type_id\" class=\"form-select\" required >\r\n                                                <option *ngFor=\"let data of itemCategoryList\" [value]=\"data.id\" >\r\n                                                    {{data.name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 mb-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"col-form-label pt-0\" for=\"exampleInputEmail1\">Unit</label>\r\n                                            <input class=\"form-control\" formControlName=\"unit\" id=\"exampleInputEmail1\" type=\"number\"\r\n                                                   placeholder=\"Enter Unit\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 mb-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"col-form-label pt-0\" for=\"exampleInputEmail1\">Description</label>\r\n                                            <input class=\"form-control\" formControlName=\"description\" id=\"exampleInputEmail1\" type=\"text\"\r\n                                                   placeholder=\"Enter Description\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"card-footer\">\r\n                            <button [hidden]=\"isUpdatable == true\" class=\"btn btn-primary me-1\" (click)=\"saveItems()\">Submit</button>\r\n                            <button [hidden]=\"isUpdatable == false\" class=\"btn btn-primary me-1\" (click)=\"updateItems()\">Update</button>\r\n                            <button [hidden]=\"isUpdatable == false\" class=\"btn btn-primary me-1\" (click)=\"cancelUpdate()\">Cancel</button>\r\n                            <!--                            <button class=\"btn btn-secondary\">Cancel</button>-->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-12\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-xl-7\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-header\">\r\n                                <h5>Items</h5>\r\n                                <span>Items List.</span>\r\n                            </div>\r\n                            <div class=\"table-responsive\">\r\n\r\n                                <table class=\"table\" style=\"text-align: center\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th colspan=\"2\">#</th>\r\n                                        <th colspan=\"2\">Name</th>\r\n                                        <th colspan=\"2\">Item Type</th>\r\n                                        <th colspan=\"2\">Unit</th>\r\n                                        <th colspan=\"2\">Description</th>\r\n                                        <th colspan=\"2\">Action</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr *ngFor=\"let record of itemList| paginate: { itemsPerPage: 10, currentPage: p }  ;let indexOfElement=index\">\r\n                                        <td colspan=\"2\">{{indexOfElement+1}}</td>\r\n                                        <td colspan=\"2\">{{record.name}}</td>\r\n                                        <td colspan=\"2\">{{record.item_type_name}}</td>\r\n                                        <td colspan=\"2\">{{record.unit}}</td>\r\n                                        <td colspan=\"2\">{{record.description}}</td>\r\n                                        <td colspan=\"2\">\r\n                                            <a (click)=\"editItem(record)\"><mat-icon>edit</mat-icon></a>\r\n                                            <a (click)=\"deleteItem(record)\"><mat-icon>delete</mat-icon></a>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <pagination-controls [hidden]=\"itemList.length<9\" (pageChange)=\"p = $event\"></pagination-controls>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Container-fluid Ends-->","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {ItemTypeComponent} from \"./item-type/item-type.component\";\r\nimport {AddItemsComponent} from \"./add-items/add-items.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'inventoryItem',\r\n    component: ItemTypeComponent,\r\n    data: {\r\n      title: \"Item Category\",\r\n      breadcrumb: \"Item Category\"\r\n    }\r\n  },\r\n  {\r\n    path: 'addItem',\r\n    component: AddItemsComponent,\r\n    data: {\r\n      title: \"Add Item\",\r\n      breadcrumb: \"Add Item\"\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InventoryRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { InventoryRoutingModule } from './inventory-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    InventoryRoutingModule\r\n  ]\r\n})\r\nexport class InventoryModule { }\r\n","import { Component } from '@angular/core';\r\nimport {InventoryService} from \"../../../services/inventory.service\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {NgForOf} from \"@angular/common\";\r\nimport {NgxPaginationModule} from \"ngx-pagination\";\r\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: 'app-item-type',\r\n  standalone: true,\r\n  imports: [\r\n    MatIconModule,\r\n    NgForOf,\r\n    NgxPaginationModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  templateUrl: './item-type.component.html',\r\n  styleUrl: './item-type.component.scss'\r\n})\r\nexport class ItemTypeComponent {\r\n  itemCategoryList: any[];\r\n  isUpdatable = false;\r\n  itemCategoryForm: FormGroup;\r\n  p:number;\r\n\r\n  constructor(private inventoryService: InventoryService) {\r\n    this.itemCategoryForm = new FormGroup({\r\n      id: new FormControl(null),\r\n      name: new FormControl(null, [Validators.required]),\r\n    });\r\n    this.inventoryService.getItemCategoryListListener().subscribe((response) => {\r\n      this.itemCategoryList = response;\r\n    });\r\n    this.itemCategoryList = this.inventoryService.getItemCategory();\r\n  }\r\n\r\n  saveItemCategory(){\r\n    this.inventoryService.saveItemCategory(this.itemCategoryForm.value).subscribe((response) => {\r\n      // @ts-ignore\r\n      if(response.success == 1){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Item Category Saved',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        });\r\n        this.itemCategoryForm.reset();\r\n      }\r\n    });\r\n  }\r\n\r\n  updateItemCategory(){\r\n    this.inventoryService.updateItemCategory(this.itemCategoryForm.value).subscribe((response) => {\r\n      // @ts-ignore\r\n      if(response.success == 1){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Item Category Updated',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        });\r\n        this.cancelUpdate();\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelUpdate(){\r\n    this.itemCategoryForm.reset();\r\n    this.isUpdatable = false;\r\n  }\r\n\r\n  editItemCategory(data){\r\n    this.itemCategoryForm.patchValue(data);\r\n    this.isUpdatable = true;\r\n  }\r\n\r\n  deleteRoomCategory(data){\r\n\r\n    Swal.fire({\r\n      title: 'Confirmation',\r\n      text: 'Do you sure to delete Room Type ?',\r\n      icon: 'info',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete It!'\r\n    }).then((result) => {\r\n      if(result.isConfirmed){\r\n        this.inventoryService.deleteItemCategory(data.id).subscribe((response) => {\r\n          // @ts-ignore\r\n          if(response.success == 1){\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'success',\r\n              title: 'Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1000\r\n            });\r\n            this.itemCategoryForm.reset();\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 col-xl-5\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header\">\r\n                            <h5>Item Category</h5><span>Add Item Category</span>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <form class=\"theme-form\" [formGroup]=\"itemCategoryForm\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 mb-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"col-form-label pt-0\" for=\"exampleInputEmail1\">Name</label>\r\n                                            <input class=\"form-control\" formControlName=\"name\" id=\"exampleInputEmail1\" type=\"text\"\r\n                                                   placeholder=\"Name\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"card-footer\">\r\n                            <button [disabled]=\"!itemCategoryForm.valid\" [hidden]=\"isUpdatable == true\" class=\"btn btn-primary me-1\" (click)=\"saveItemCategory()\">Submit</button>\r\n                            <button [hidden]=\"isUpdatable == false\" class=\"btn btn-primary me-1\" (click)=\"updateItemCategory()\">Update</button>\r\n                            <button [hidden]=\"isUpdatable == false\" class=\"btn btn-primary me-1\" (click)=\"cancelUpdate()\">Cancel</button>\r\n                            <!--                            <button class=\"btn btn-secondary\">Cancel</button>-->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-xl-7\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-header\">\r\n                                <h5>Room Type</h5>\r\n                                <span>Room Type List.</span>\r\n                            </div>\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table\" style=\"text-align: center\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th colspan=\"2\">#</th>\r\n                                        <th colspan=\"2\">Name</th>\r\n                                        <th colspan=\"2\">Action</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr *ngFor=\"let record of itemCategoryList| paginate: { itemsPerPage: 15, currentPage: p }  ;let indexOfElement=index\">\r\n                                        <td colspan=\"2\">{{indexOfElement+1}}</td>\r\n                                        <td colspan=\"2\">{{record.name}}</td>\r\n                                        <td colspan=\"2\">\r\n                                            <a (click)=\"editItemCategory(record)\"><mat-icon>edit</mat-icon></a>\r\n                                            <a (click)=\"deleteRoomCategory(record)\"><mat-icon>delete</mat-icon></a>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <pagination-controls [hidden]=\"itemCategoryList.length<14\" (pageChange)=\"p = $event\"></pagination-controls>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Container-fluid Ends-->","import { Injectable } from '@angular/core';\r\nimport {environment} from \"../../environments/environment\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ErrorService} from \"./error.service\";\r\nimport {Subject} from \"rxjs\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryService {\r\n  private BASE_API_URL = environment.BASE_API_URL;\r\n  itemCategoryList = [];\r\n  itemList = [];\r\n\r\n\r\n  itemListSubject = new Subject<any[]>();\r\n  itemCategoryListSubject = new Subject<any[]>();\r\n\r\n\r\n  getItemCategoryListListener(){\r\n    return this.itemCategoryListSubject.asObservable();\r\n  }\r\n\r\n  getItemListListener(){\r\n      return this.itemListSubject.asObservable();\r\n  }\r\n\r\n\r\n  constructor(private  http: HttpClient, private errorService: ErrorService) {\r\n    this.http.get(this.BASE_API_URL + '/getItemCategory').subscribe((response: any) =>{\r\n      this.itemCategoryList = response.data;\r\n      this.itemCategoryListSubject.next([...this.itemCategoryList]);\r\n    });\r\n      this.http.get(this.BASE_API_URL + '/getInventoryItems').subscribe((response: any) =>{\r\n          this.itemList = response.data;\r\n          this.itemListSubject.next([...this.itemList]);\r\n      });\r\n\r\n  }\r\n\r\n  getItemCategory(){\r\n    return [...this.itemCategoryList];\r\n  }\r\n\r\n  getItem(){\r\n      return [...this.itemList];\r\n  }\r\n\r\n  saveItemCategory(data){\r\n    return this.http.post(this.BASE_API_URL + '/saveItemCategory', data)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          // @ts-ignore\r\n          if(response.success == 1){\r\n            // @ts-ignore\r\n            this.itemCategoryList.push(response.data);\r\n            this.itemCategoryListSubject.next([...this.itemCategoryList]);\r\n          }\r\n        }));\r\n  }\r\n\r\n  deleteItemCategory(id){\r\n    return this.http.get(this.BASE_API_URL + '/deleteItemCategory/' + id)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          // @ts-ignore\r\n          if(response.success == 1){\r\n            // @ts-ignore\r\n            const index = this.itemCategoryList.findIndex(x => x.id === response.data.id);\r\n            this.itemCategoryList.splice(index,1);\r\n            this.itemCategoryListSubject.next([...this.itemCategoryList]);\r\n          }\r\n        }));\r\n  }\r\n\r\n  updateItemCategory(data){\r\n    return this.http.post(this.BASE_API_URL + '/updateItemCategory', data)\r\n        .pipe(catchError(this.errorService.serverError), tap(response => {\r\n          // @ts-ignore\r\n          if(response.success == 1){\r\n            // @ts-ignore\r\n            const index = this.itemCategoryList.findIndex(x => x.id === response.data.id);\r\n            // @ts-ignore\r\n            this.itemCategoryList[index] = response.data;\r\n            this.itemCategoryListSubject.next([...this.itemCategoryList]);\r\n          }\r\n        }));\r\n  }\r\n\r\n    saveItems(data){\r\n        return this.http.post(this.BASE_API_URL + '/saveInventoryItems', data)\r\n            .pipe(catchError(this.errorService.serverError), tap(response => {\r\n                // @ts-ignore\r\n                if(response.success == 1){\r\n                    // @ts-ignore\r\n                    this.itemList.push(response.data);\r\n                    this.itemListSubject.next([...this.itemList]);\r\n                }\r\n            }));\r\n    }\r\n\r\n    updateItems(data){\r\n        return this.http.post(this.BASE_API_URL + '/updateInventoryItems', data)\r\n            .pipe(catchError(this.errorService.serverError), tap(response => {\r\n                // @ts-ignore\r\n                if(response.success == 1){\r\n                    // @ts-ignore\r\n                    const index = this.itemList.findIndex(x => x.id === response.data.id);\r\n                    // @ts-ignore\r\n                    this.itemList[index] = response.data;\r\n                    this.itemListSubject.next([...this.itemList]);\r\n                }\r\n            }));\r\n    }\r\n    deleteItems(id){\r\n        return this.http.get(this.BASE_API_URL + '/deleteInventoryItems/' + id)\r\n            .pipe(catchError(this.errorService.serverError), tap(response => {\r\n                // @ts-ignore\r\n                if(response.success == 1){\r\n                    // @ts-ignore\r\n                    const index = this.itemList.findIndex(x => x.id === response.data.id);\r\n                    this.itemList.splice(index,1);\r\n                    this.itemListSubject.next([...this.itemList]);\r\n                }\r\n            }));\r\n    }\r\n}\r\n"],"names":["MatIconModule","NgForOf","NgxPaginationModule","FormControl","FormGroup","ReactiveFormsModule","Validators","Swal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","data_r2","id","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵlistener","AddItemsComponent_tr_72_Template_a_click_12_listener","restoredCtx","ɵɵrestoreView","_r6","record_r3","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","editItem","AddItemsComponent_tr_72_Template_a_click_15_listener","ctx_r7","deleteItem","ɵɵtextInterpolate","indexOfElement_r4","item_type_name","unit","description","AddItemsComponent","constructor","inventoryService","isUpdatable","inventoryItemsForm","required","item_type_id","getItemCategoryListListener","subscribe","response","itemCategoryList","getItemCategory","getItemListListener","itemList","getItem","saveItems","fire","title","html","allowOutsideClick","didOpen","showLoading","value","success","close","position","icon","showConfirmButton","timer","reset","updateItems","cancelUpdate","data","patchValue","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","deleteItems","_","ɵɵdirectiveInject","i1","InventoryService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AddItemsComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AddItemsComponent_option_24_Template","AddItemsComponent_Template_button_click_38_listener","AddItemsComponent_Template_button_click_40_listener","AddItemsComponent_Template_button_click_42_listener","AddItemsComponent_tr_72_Template","AddItemsComponent_Template_pagination_controls_pageChange_74_listener","$event","p","ɵɵpipeBind2","ɵɵpureFunction1","_c0","length","i2","MatIcon","i3","PaginatePipe","PaginationControlsComponent","i4","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","styles","RouterModule","ItemTypeComponent","routes","path","component","breadcrumb","InventoryRoutingModule","_3","forChild","imports","exports","CommonModule","InventoryModule","ItemTypeComponent_tr_47_Template_a_click_6_listener","_r4","record_r1","ctx_r3","editItemCategory","ItemTypeComponent_tr_47_Template_a_click_9_listener","deleteRoomCategory","indexOfElement_r2","itemCategoryForm","saveItemCategory","updateItemCategory","isConfirmed","deleteItemCategory","ItemTypeComponent_Template","ItemTypeComponent_Template_button_click_20_listener","ItemTypeComponent_Template_button_click_22_listener","ItemTypeComponent_Template_button_click_24_listener","ItemTypeComponent_tr_47_Template","ItemTypeComponent_Template_pagination_controls_pageChange_49_listener","valid","environment","Subject","catchError","tap","itemCategoryListSubject","asObservable","itemListSubject","http","errorService","BASE_API_URL","get","next","post","pipe","serverError","push","index","findIndex","x","splice","ɵɵinject","HttpClient","ErrorService","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}